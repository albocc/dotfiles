#!/bin/bash

KERNEL_PATH_TO_BATTERIES="/sys/class/power_supply"

# Starting at zero
TOTAL_FULL_ENERGY=0
CURRENTLY_AVAILABLE_ENERGY=0
POWER_CONSUMPTION=0

# Sum up all battery's total and current energy and their power usage
for BATTERY in $(ls "$KERNEL_PATH_TO_BATTERIES" | grep BAT); do
	TOTAL_FULL_ENERGY=$((TOTAL_FULL_ENERGY + $(cat $KERNEL_PATH_TO_BATTERIES/$BATTERY/energy_full) ))
	CURRENTLY_AVAILABLE_ENERGY=$((CURRENTLY_AVAILABLE_ENERGY + $(cat $KERNEL_PATH_TO_BATTERIES/$BATTERY/energy_now) ))
	POWER_CONSUMPTION=$((POWER_CONSUMPTION + $(cat $KERNEL_PATH_TO_BATTERIES/$BATTERY/power_now) ))
done

# The remaining energy as a percentage of the full energy value
REMAINING_ENERGY_PERCENTAGE=$((CURRENTLY_AVAILABLE_ENERGY * 100 / TOTAL_FULL_ENERGY))

BATTERY_CHARGING="$(cat $KERNEL_PATH_TO_BATTERIES/AC/online)"

# Print the percentage and the remaining time, plus a fancy cable emoji when charging
if [ ${BATTERY_CHARGING} -eq 1 ]; then
	# Calculate and format the remaining time based on what is left to charge
	REMAINING_HOURS=$((($TOTAL_FULL_ENERGY - $CURRENTLY_AVAILABLE_ENERGY) / $POWER_CONSUMPTION))
	REMAINING_MINUTES=$(bc -l <<< "((($TOTAL_FULL_ENERGY - $CURRENTLY_AVAILABLE_ENERGY) / $POWER_CONSUMPTION) - $REMAINING_HOURS.0) * 60.0")
	REMAINING_TIME="$(printf "%02d" ${REMAINING_HOURS}):$(printf "%02d" ${REMAINING_MINUTES/.*/})"

	echo "${REMAINING_ENERGY_PERCENTAGE}% ($REMAINING_TIME) âš¡"
else
	# Calculate and format the remaining time based on the energy left
	REMAINING_HOURS=$(($CURRENTLY_AVAILABLE_ENERGY / $POWER_CONSUMPTION))
	REMAINING_MINUTES=$(bc -l <<< "(($CURRENTLY_AVAILABLE_ENERGY / $POWER_CONSUMPTION) - $REMAINING_HOURS.0) * 60.0")
	REMAINING_TIME="$(printf "%02d" ${REMAINING_HOURS}):$(printf "%02d" ${REMAINING_MINUTES/.*/})"

	echo "${REMAINING_ENERGY_PERCENTAGE}% ($REMAINING_TIME)"
fi

# Short text (when bar is full)
echo "${REMAINING_ENERGY_PERCENTAGE}%"

# Make text red when battery percentage low
if [ $REMAINING_ENERGY_PERCENTAGE -lt 10 -a ${BATTERY_CHARGING} -ne 1 ]; then
	echo '#EE0000'
fi

